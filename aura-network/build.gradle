apply plugin: 'com.android.library'


// 通过外部文件的引用来执行上传JCenter的任务,master分支使用在线的依赖配置
String gitBranch = 'git symbolic-ref --short -q HEAD'.execute().text.trim()

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            // 这个是设置注解执行器的选项参数，我们来设置room里面schemas的存储路径
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    // RnJava and RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'

    //===================JetPack的Room框架依赖===============================
    // JetPack的Room框架：Room持久性库在 SQLite 的基础上提供了一个抽象层，
    // 让用户能够在充分利用 SQLite 的强大功能的同时，获享更强健的数据库访问机制。
    // https://developer.android.com/jetpack/androidx/releases/room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    //===================JetPack的Room框架依赖===============================

    if (gitBranch == "dev") {
        implementation project(':aura-toolkits')
    } else {
        implementation 'wang.frewen.aura:aura-toolkits:1.0.0'
    }
}
