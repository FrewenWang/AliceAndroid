apply from: 'toolkits/gradle/parseLocalProperties.gradle'

buildscript {
    ext.kotlin_version = '1.3.61'//kotlin的版本
    ext.anko_version = '0.10.8'
    ext.booster_version = '1.6.0'
    ext.debug = gradle.startParameter.taskNames.any { it.contains('debug') || it.contains('Debug') }

    /**
     * 这个闭包里面传入的插件依赖的仓库。
     * 该闭包中声明了jcenter()和google()的配置，其中jcenter是一个代码托管仓库，
     * 上面托管了很多Android开源项目，在这里配置了jcenter后我们可以在项目中方便引用jcenter上的开源项目，
     * 从Android Studio3.0后新增了google()配置，可以引用google上的开源项目。
     * 我们在dev分支进行引用我们本地的插件依赖仓库
     */
    repositories {
        String gitBranch = 'git symbolic-ref --short -q HEAD'.execute().text.trim()
//        if (gitBranch == "dev") {
//            // 这个闭包里面传入的插件依赖的仓库。注意：使用本地依赖库，首先要启动artifactory
//            // 具体见：/tool_kits/artifactory-start.sh
//            maven { url 'http://localhost:8081/artifactory/frewen_maven_group/' }
//        } else {
        google()
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/public' }
//        }
        // 设置仓库
        maven { url "https://chaquo.com/maven" }
    }
    /**
     * 该闭包使用classpath声明了一个Gradle插件，
     * 由于Gradle并不只是用来构建Android项目，因此此处引入相关插件来构建Android项目，
     * 其中'3.6.3'为该插件的版本号，可以根据最新的版本号来调整。
     */
    dependencies {
        // 应用Gradle插件
        classpath 'com.android.tools.build:gradle:3.6.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // 导入Chaquopy框架的包
        classpath 'com.chaquo.python:gradle:8.0.0'

        // 添加hilt的插件依赖
        // https://developer.android.com/training/dependency-injection/hilt-android?hl=zh-cn
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.28-alpha'
        // 面向切面编程的插件，具体怎么用有待学习
        // https://github.com/HujiangTechnology/gradle_plugin_android_aspectjx
        // classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.10'
        // https://github.com/google/protobuf-gradle-plugin
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.13'

    }
}

allprojects {
//    parseLocalProperties()
    repositories {
        String gitBranch = 'git symbolic-ref --short -q HEAD'.execute().text.trim()
        println("allprojects repositories gitBranch = " + gitBranch)
//        if (gitBranch == "dev") {
//            maven { url 'http://localhost:8081/artifactory/frewen_maven_group/' }
//        } else {
        google()
        jcenter()
//        }
        maven { url 'https://dl.bintray.com/frewenwong/androidmaven' }
        maven { url 'https://jitpack.io' }
    }
}
/**
 * gradle主工程执行的clean的task.就是删除rootProject.buildDir 工程根目录下的build文件夹
 * */
task clean(type: Delete) {
    delete rootProject.buildDir
}

apply from: 'toolkits/quality/quality.gradle'

//添加工程根目录下外部的的'dependencies.gradle'文件依赖。master分支使用在线的依赖配置
String gitBranch = 'git symbolic-ref --short -q HEAD'.execute().text.trim()
if (gitBranch == "dev") {
    apply from: rootProject.file('../GradleDependence/app_dependence.gradle')
} else {
    apply from: 'https://gitee.com/frewen1225/gradle_dependence/raw/master/app_dependence.gradle'
}


// Define versions in a single place
ext {
    // App dependencies
//    appCompatVersion = '1.1.0-beta01'
//    constraintLayoutVersion = '2.0.0-beta1'
//    coreTestingVersion = '2.0.0'
//    coroutinesVersion = "1.3.0-M2"
//    espressoVersion = '3.1.1'
//    fragmentVersion = '1.1.0-alpha09'
//    glideVersion = '4.9.0'
//    gradleVersion = '3.5.0'
//    gsonVersion = '2.8.2'
//    junitVersion = '4.12'
//    kotlinVersion = '1.3.41'
//    ktlintVersion = '0.33.0'
//    ktxVersion = '1.0.2'
//    lifecycleVersion = '2.2.0-alpha01'
    materialVersion = '1.1.0-alpha09'
    navigationVersion = '2.0.0'
//    recyclerViewVersion = '1.1.0-alpha05'
//    roomVersion = '2.1.0'
//    runnerVersion = '1.0.1'
//    truthVersion = '0.42'
//    testExtJunit = '1.1.0'
//    uiAutomatorVersion = '2.2.0'
//    viewPagerVersion = '1.0.0-beta03'
//    workVersion = '2.1.0'
}