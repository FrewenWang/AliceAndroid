/**
 * Task之间是可以是可以有依赖关系的
 */
task helloTaskDependencies1 {
    println "helloTaskDependencies1 Configuration Lifecycle  invoked"

    doFirst {
        println "helloTaskDependencies1 doFirst  invoked"
    }
    doLast {
        println "helloTaskDependencies1 doLast  invoked"
    }
}

/**
 * 我们可以通过dependsOn来执行helloTaskDependencies2依赖的前置Task
 */
task helloTaskDependencies2(dependsOn: helloTaskDependencies1) {

    println "helloTaskDependencies2 Configuration Lifecycle  invoked"

    doFirst {
        println "helloTaskDependencies2 doFirst  invoked"
    }
    doLast {
        println "helloTaskDependencies2 doLast  invoked"
    }
}

/**
 * 多个Task依赖的方式，就不能使用下面的这种写法
 * 需要在Task的配置方法体内部调用dependsOn方法，否则会报错误：
 * Could not find method helloTaskDependencies3() for arguments [{dependsOn=task ':helloTaskDependencies1'}, task ':helloTaskDependencies2',
 * gradle_task_dependencies_c31v8mot7466f2yg30jiajg3x$_run_closure3@702a8156] on root project 'HelloAndroid' of type org.gradle.api.Project.
 */
//task helloTaskDependencies3(dependsOn: helloTaskDependencies1, helloTaskDependencies2) {
task helloTaskDependencies3 {
    /**
     * dependsOn 其实是Task类的一个方法
     * @see Task* Task dependsOn(Object... paths);
     * 可以接受多个参数，作为依赖的任务
     */
    dependsOn helloTaskDependencies1, helloTaskDependencies2
    println "helloTaskDependencies3 Configuration Lifecycle  invoked"

    doFirst {
        println "helloTaskDependencies3 doFirst  invoked"
    }
    doLast {
        println "helloTaskDependencies3 doLast  invoked"
    }
}
