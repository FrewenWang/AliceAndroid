apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
// Kotlin注解的一些功能会用到这个插件
apply plugin: 'kotlin-kapt'


String gitBranch = 'git symbolic-ref --short -q HEAD'.execute().text.trim()

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    // 使用 DataBinding必须添加，切记！！！
    dataBinding {
        enabled = true
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //==============<editor-folder desc = "Dependence:Kotlin标准库依赖">=============================
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //=============</editor-folder desc = "Dependence:Kotlin标准库依赖">=============================

    //==============<editor-folder desc = "Dependence:AuraFrameWork框架依赖">========================
    if (gitBranch == "dev") {
        api project(path: ':aura-framework')
        api project(path: ':optimusnetwork')
        api project(path: ':aura-network')
        api project(path: ':aura-ui')
        api project(path: ':aura-toolkits')
    } else {
        api 'wang.frewen.aura:aura-toolkits:1.0.0'
        api 'wang.frewen.aura:aura-ui:1.0.0'
        api 'wang.frewen.aura:aura-framework:1.0.0'
    }
    //=============</editor-folder desc = "Dependence:AuraFrameWork框架依赖">========================

    //=================<editor-folder desc = "Dependence:底部导航栏框架依赖">=========================
    api 'devlight.io:navigationtabbar:1.2.5'
    api 'com.androidkun:XTabLayout:1.1.4'
    // 使用指南：https://github.com/ittianyu/BottomNavigationViewEx/blob/master/README_ZH.md
    api 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'
    //=================</editor-folder desc = "Dependence:底部导航栏框架依赖">========================

    //===================添加OKHttp网络请求框架===============================
    //OKHttp内置拦截器 https://github.com/square/okhttp/tree/master/okhttp-logging-interceptor
    implementation("com.squareup.okhttp3:logging-interceptor:4.8.0")
    //OKHttp请求的依赖框架：https://github.com/square/okhttp/
    implementation("com.squareup.okhttp3:okhttp:4.8.0")
    testImplementation("com.squareup.okhttp3:mockwebserver:4.8.0")
    //===================添加OKHttp网络请求框架===============================


    api 'com.github.CarGuo.LazyRecyclerAdapter:CommonRecycler-Kotlin:v4.0.6'
    // https://github.com/H07000223/FlycoTabLayout
    api 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    //======<editor-folder desc = "Dependence:Tencent的开源框架依赖">================================
    // 文章参考：https://x5.tencent.com/docs/access.html
    // 第一步：集成X5内核浏览器的依赖
    api 'com.tencent.tbs.tbssdk:sdk:43903'
    // https://github.com/Tencent/MMKV
    //
    api 'com.tencent:mmkv-static:1.2.7'
    //======</editor-folder desc = "Dependence:Tencent的开源框架依赖">===============================


    //=================<editor-folder desc = "Dependence:腾讯崩溃收集库Bugly">========================
    // Bugly的依赖库添加：https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20200203205953
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    api 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    api 'com.tencent.bugly:nativecrashreport:latest.release'
    //=================</editor-folder desc = "Dependence:腾讯崩溃收集库Bugly">=======================


    //======<editor-folder desc = "Dependence:SmartRefreshLayout的开源框架依赖">======================
    api 'com.scwang.smart:refresh-layout-kernel:2.0.1'      //核心必须依赖
    api 'com.scwang.smart:refresh-header-classics:2.0.1'    //经典刷新头
    api 'com.scwang.smart:refresh-header-radar:2.0.1'       //雷达刷新头
    api 'com.scwang.smart:refresh-header-falsify:2.0.1'     //虚拟刷新头
    api 'com.scwang.smart:refresh-header-material:2.0.1'    //谷歌刷新头
    api 'com.scwang.smart:refresh-header-two-level:2.0.1'   //二级刷新头
    api 'com.scwang.smart:refresh-footer-ball:2.0.1'        //球脉冲加载
    api 'com.scwang.smart:refresh-footer-classics:2.0.1'    //经典加载
    //======</editor-folder desc = "Dependence:SmartRefreshLayout的开源框架依赖">======================


    //====== <editor-folder desc = "Dependence:RecyclerViewAdapter的依赖">==========================
    // api 'com.frewen.wang:free-adapter:1.0.1'
    // https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    //第三方Recyclerview的依赖
    api 'com.yanzhenjie.recyclerview:x:1.3.2'
    //====== </editor-folder desc = "Dependence:RecyclerViewAdapter的依赖">==========================


    //=================<editor-folder desc = "Dependence:各种自定义View控件">===================
    api 'com.github.hackware1993:MagicIndicator:1.5.0'
    // https://github.com/zhpanvip/BannerViewPagers
    api 'com.github.zhpanvip:BannerViewPager:3.1.5'
    // implementation 'com.github.zhpanvip:BannerViewPager:3.5.0'

    //管理界面状态库:https://github.com/KingJA/LoadSir 用于无侵入显示各种loading状态页面
    api 'com.kingja.loadsir:loadsir:1.3.8'
    //================= </editor-folder desc = "Dependence:各种自定义View控件">=================


}
