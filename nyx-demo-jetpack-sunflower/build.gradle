apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.frewen.nyx.hilt.demo"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //============<editor-folder desc = "Dependence:依赖AuraFramework框架">=========================
    implementation project(path: ':aura-ui')
    implementation project(path: ':aura-toolkits')
    //============</editor-folder desc = "Dependence:依赖AuraFramework框架">=========================

    //============<editor-folder desc = "Dependence:JetPack的Room框架依赖">=========================
    // JetPack的Room框架：Room持久性库在 SQLite 的基础上提供了一个抽象层，
    // 让用户能够在充分利用 SQLite 的强大功能的同时，获享更强健的数据库访问机制。
    // https://developer.android.com/jetpack/androidx/releases/room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // 正常情况，我们就只需要依赖上面的两个依赖
    // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    //==============</editor-folder desc ="Dependence:JetPack的Room框架依赖">========================

    //=================<editor-folder desc = "Dependence:添加Hilt依赖注入框架">=======================
    // https://developer.android.com/training/dependency-injection/hilt-android?hl=zh-cn
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    //=================</editor-folder desc = "Dependence:添加Hilt依赖注入框架">======================

    //=================<editor-folder desc = "Dependence:OkHttp相关框架的依赖">=======================
    implementation dep.okhttp3
    implementation dep.okio
    //=================</editor-folder desc = "Dependence:OkHttp相关框架的依赖">======================

    //=================<editor-folder desc = "Dependence:Retrofit的相关依赖">========================
    implementation(dep.retrofit) {
        exclude module: 'okhttp'
    }
    implementation dep.retrofitGson
    implementation dep.retrofitRxjava2
    //=================</editor-folder desc = "Dependence:Retrofit的相关依赖">=======================

}
